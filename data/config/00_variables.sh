#!/bin/bash
# HOSK - HyperOS Kitchen
# by Matheus Ferreira
# Directories Variables

# Data dir: contains all files used by our compiler
# HOSK/data
export hosk_data_dir=${hosk_system}/data

# Bin subdir: contains all binaries used by our compiler scripts
# HOSK/data/bin
export hosk_bin_dir=${hosk_data_dir}/bin

# Config subdir: contains all configuration files used by our compiler
# HOSK/data/config
export hosk_config_dir=${hosk_data_dir}/config

# Device patches subdir: contains all patches used by our compiler
# HOSK/data/device_patches
export hosk_device_patches_dir=${hosk_data_dir}/patches

# Logs subdir: contains all logs generated by our compiler
# HOSK/data/logs
export hosk_log_dir=${hosk_data_dir}/logs

# Scripts subdir: contains all scripts used by our compiler
# HOSK/data/scripts
export hosk_scripts_dir=${hosk_data_dir}/scripts

# core scripts subdir: contains all core scripts used by our compiler
# HOSK/data/scripts/core
export hosk_scripts_core_dir=${hosk_scripts_dir}/core

# Deodex scripts subdir: contains all scripts related to our deodex system
# HOSK/data/scripts/deodex
export hosk_scripts_deodex_dir=${hosk_scripts_dir}/deodex

# Menu scripts subdir: contains all menufiles for items in our compiler
# HOSK/data/scripts/menus
export hosk_scripts_menu_dir=${hosk_scripts_dir}/menus

# ROM scripts subdir: contains all scripts related to ROM work used by our compiler
# HOSK/data/scripts/rom
export hosk_scripts_rom_dir=${hosk_scripts_dir}/rom

# Repositories dir: contains all repositories used during compile phase
# HOSK/data/repositories
export hosk_repositories_dir=${hosk_data_dir}/repositories

# Workdir: temporary folder where deodexing / patches takes place
# HOSK/data/workdir
export hosk_work_dir=${hosk_data_dir}/workdir

# Input directory where untouched ROMs are located
# HOSK/input/source
export hosk_source_rom=${hosk_system}/input/source

# Output directory where processed ROMs are moved to
# MRC/input/source/done
export hosk_source_done=${hosk_source_rom}/done

# Input directory where deodexed ROMs are located after conversion
# MRC/input/deodexed
export hosk_deodexed_rom=${hosk_system}/input/deodexed

# Output directory where processed deodexed ROMs are moved to
# MRC/input/deodexed/done
export hosk_deodexed_done=${hosk_deodexed_rom}/done

# Translator directory (jBART)
export hosk_translator_dir=${hosk_bin_dir}/translator

# Input directory where deodexed ROMs are put to be translated
export hosk_translator_input_dir=${hosk_translator_dir}/input

# Output directory where translated ROMs are placed
export hosk_translator_output_dir=${hosk_translator_dir}/output

# Output directory where compiled ROMs are placed
# MRC/output
export hosk_output_dir=${hosk_system}/output